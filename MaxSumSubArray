// # Maximum SubArray Sum
// # Question Link - https://leetcode.com/problems/maximum-subarray/description/
// # Solution - 


#include<bits/stdc++.h>
using namespace std;
int
main ()
{
  int n;
  cin >> n;
  int a[n];
  for (int i = 0; i < n; i++)
    {
      cin >> a[i];
    }
  int curr = 0;
  int maximum = INT_MIN;
  for(int i=0;i<n;i++){
      curr = max(0,curr);
      curr = curr + a[i];
      maximum = max(curr,maximum);
  }
  cout<<"Maximum continous sum is : "<<maximum<<endl;
}

// # Leetcode Solution -
/*
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
       int curr =0;
       int maxi = INT_MIN;
       for(int i=0;i<nums.size();i++){
           curr= max(0,curr);
           curr = curr + nums[i];
           maxi = max(maxi,curr);
        }

    return maxi;   
    }
};

*/


