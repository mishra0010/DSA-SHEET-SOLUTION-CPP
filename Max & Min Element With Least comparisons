//# Maximum and minimum of an array using minimum number of comparison
//# Ques Link - https://www.geeksforgeeks.org/maximum-and-minimum-in-an-array/
//# Solution 
#include<bits/stdc++.h>
using namespace std;
int
main ()
{
  int n;
  cin >> n;
  int a[n];
  for (int i = 0; i < n; i++)
    {
      cin >> a[i];
    }
  int i;
  int min = 0;
  int max = 0;
  if (n % 2 == 0)
    {
      if (a[0] > a[1])
	{
	  max = a[0];
	  min = a[1];
	}
      else
	{
	  max = a[1];
	  min = a[0];
	}
      i = 2;
    }
  else
    {
      min = a[0];
      max = a[0];
      i = 1;
    }
  while (i < n - 1)
    {
      if (a[i] > a[i + 1])
	{
	  if (a[i] > max)
	    {
	      max = a[i];
	    }
	  if (a[i + 1] < min)
	    {
	      min = a[i + 1];
	    }
	}
      else
	{
	  if (a[i + 1] > max)
	    {
	      max = a[i + 1];
	    }
	  if (a[i] < min)
	    {
	      min = a[i];
	    }
	}
      i = i + 2;
    }
  cout << "Maximum Value = : " << max << endl;
  cout << "Minimum Value = : " << min << endl;
  // No of comparisons : 
// 1 - Odd Value Of N:-3 (n - 1) / 2
  // 3 because of if - if - if condition , (n-1) because Loop iteration , 2 because i += 2
// 2 - Even Value of N:1 + 3 (n - 1) / 2
  // 1 add up because of one more comparison is done for even number of n values
}
